name: drf tests

on:
  pull_request:
    branches:
      - main

jobs:
  pytest:
    runs-on: ubuntu-latest
    name: pytest
    permissions: write-all

    services:
      db:
        image: postgres:15.2-alpine
        env:
          POSTGRES_NAME: talebi
          POSTGRES_USER: talebi
          POSTGRES_PASSWORD: 123456
          POSTGRES_PORT: 5432
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7.2-rc2-alpine
        ports:
          - 6379:6379

    steps:
      - name: check out source repository
        uses: actions/checkout@v3

      - name: set up Python environment
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: install dependencies
        env:
          POETRY_VIRTUALENVS_CREATE: false
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install --no-root --no-interaction --no-ansi

      - name: run tests and produce report
        env:
          POSTGRES_NAME: talebi
          POSTGRES_USER: talebi
          POSTGRES_PASSWORD: 123456
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          REDIS_HOST: localhost
        run: |
          pytest --cache-clear --disable-warnings --junit-xml=test-results.xml --cov=. | tee pytest-coverage.txt

      - name: surface failing tests
        if: always()
        uses: pmeier/pytest-results-action@main
        with:
          # A list of JUnit XML files, directories containing the former, and wildcard
          # patterns to process.
          # See @actions/glob for supported patterns.
          path: test-results.xml

          # Add a summary of the results at the top of the report
          # Default: true
          summary: true

          # Select which results should be included in the report.
          # Follows the same syntax as
          # `pytest -r`
          # Default: fEX
          display-options: fEX

          # Fail the workflow if no JUnit XML was found.
          # Default: true
          fail-on-empty: true

      - name: pytest-coverage-commentator
        uses: coroo/pytest-coverage-commentator@v1.0.2
        with:
          pytest-coverage: pytest-coverage.txt
